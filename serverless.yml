service:
  name: ignitetodos

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-dynamodb-local

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includedModules: true
  dynamodb:
    stages:
      - dev
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws

functions:
  saveTodo:
    handler: src/functions/saveTodo.handle
    events:
      - http:
          path: /saveTodo/{id}
          method: POST
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:query
          - dynamodb:PutItem
        Resource: 'arn:aws:dynamodb:${self.provider.region}:*:table/todos'
  listTodos:
    handler: src/functions/listTodos.handle
    events:
      - http:
          path: /listTodos/{user_id}
          method: GET
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:query
        Resource: 'arn:aws:dynamodb:${self.provider.region}:*:table/todos'

resources:
  Resources:
    dbTodos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: todos
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userId
            KeySchema:
              - AttributeName: user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5